syntax = "proto3";

package auth_v1;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/mistandok/auth/pkg/access_v1;access_v1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Access API v1"
    version: "1.0.0"
    contact: {
      name: "Anton Artikov"
      email: "arti-anton@yandex.ru"
    };
  }

  security_definitions: {
    security: {
      key: "bearer"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
        description: "Authentication token, prefixed by Bearer: Bearer <token>"
      }
    }
  }

  security: {
    security_requirement: {
      key: "bearer"
    }
  }

  host: "localhost:8061",
  schemes: HTTP,
  schemes: HTTPS,
  consumes: "application/json",
  produces: "application/json",
};

service AccessV1 {
  // Create настройки доступа для Endpoint
  rpc Create (CreateRequest) returns (CreateResponse){
    option (google.api.http) = {
      post: "/access/v1"
      body: "*"
    };
  };

  // Check проверить есть ли доступ к указанному Endpoint
  rpc Check (CheckRequest) returns (google.protobuf.Empty){
    option (google.api.http) = {
      get: "/access/v1"
    };
  };
}

message CreateRequest {
  // Адрес endpoint
  string address = 1 [(validate.rules).string = {min_len: 1, max_len: 200}];
  // Роль пользователя
  Role role = 2;
}

message CreateResponse {
  // Идентификатор настройки доступа для endpoint
  int64 id = 1;
}

message CheckRequest {
  // Адрес endpoint
  string address = 1;
}

enum Role {
  UNKNOWN = 0;
  USER = 1;
  ADMIN = 2;
}


